{"ast":null,"code":"import _defineProperty from \"H:\\\\\\u6846\\u67B6\\u5B9E\\u4F8B\\\\React\\\\easy-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"H:\\\\\\u6846\\u67B6\\u5B9E\\u4F8B\\\\React\\\\easy-admin\\\\src\\\\views\\\\login\\\\login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport http from '../../api/http.js';\nimport './login.css';\nimport { userlogin } from '../../api/request.js';\n\nclass login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          values.ds = this.state.ds;\n          userlogin(_objectSpread({}, values)).then(res => {\n            console.log(res);\n          });\n        }\n      });\n    };\n\n    this.changeCode = e => {\n      let finalNum = \"\";\n\n      for (let i = 0; i < 8; i++) {\n        finalNum += Math.floor(Math.random() * 10);\n      }\n\n      this.setState({\n        ds: finalNum\n      });\n      e.target.src = http.baseURL + \"/kaptcha/\".concat(finalNum);\n    };\n\n    this.state = {\n      ds: ''\n    };\n  }\n\n  componentDidMount() {\n    let finalNum = \"\";\n\n    for (let i = 0; i < 8; i++) {\n      finalNum += Math.floor(Math.random() * 10);\n    }\n\n    this.setState({\n      ds: finalNum\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"centerform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\u6B22\\u8FCE\\u767B\\u5F55\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, getFieldDecorator('taxpayId', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, getFieldDecorator('verify', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      style: {\n        width: '50%'\n      },\n      placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      style: {\n        float: 'right'\n      },\n      src: http.baseURL + \"/kaptcha/\".concat(this.state.ds),\n      alt: \"\\u6682\\u65E0\\u56FE\\u7247\",\n      onClick: this.changeCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"))));\n  }\n\n}\n\nlogin = Form.create({})(login);\nexport default login;","map":{"version":3,"sources":["H:\\框架实例\\React\\easy-admin\\src\\views\\login\\login.js"],"names":["React","Form","Icon","Input","Button","Checkbox","http","userlogin","login","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","ds","state","then","res","changeCode","finalNum","i","Math","floor","random","setState","target","src","baseURL","componentDidMount","render","getFieldDecorator","rules","required","message","color","width","float","create"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport http from '../../api/http.js'\r\nimport './login.css';\r\nimport { userlogin } from '../../api/request.js'\r\nclass login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ds: ''\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        let finalNum = \"\";\r\n        for (let i = 0; i < 8; i++) {\r\n            finalNum += Math.floor(Math.random() * 10);\r\n        }\r\n        this.setState({\r\n            ds: finalNum\r\n        });\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                values.ds = this.state.ds\r\n                userlogin({\r\n                    ...values\r\n                }).then(res => {\r\n                    console.log(res)\r\n                })\r\n\r\n            }\r\n        });\r\n    };\r\n    changeCode = e => {\r\n        let finalNum = \"\";\r\n        for (let i = 0; i < 8; i++) {\r\n            finalNum += Math.floor(Math.random() * 10);\r\n        }\r\n        this.setState({\r\n            ds: finalNum\r\n        });\r\n        e.target.src = http.baseURL + `/kaptcha/${finalNum}`\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className='centerform'>\r\n                <div className='welcome'>欢迎登录</div>\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('taxpayId', {\r\n                            rules: [{ required: true, message: 'Please input your username!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item >\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: 'Please input your Password!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n\r\n                        {getFieldDecorator('verify', {\r\n                            rules: [{ required: true, message: 'Please input your Password!' }],\r\n                        })(\r\n                            <Input\r\n                                style={{ width: '50%' }}\r\n                                placeholder=\"验证码\"\r\n                            />\r\n                        )}\r\n                        < img style={{ float: 'right' }} src={http.baseURL + `/kaptcha/${this.state.ds}`} alt='暂无图片' onClick={this.changeCode} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {/* {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox>Remember me</Checkbox>)} */}\r\n                        {/* <a className=\"login-form-forgot\" href=\"\"> Forgot password</a> */}\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\r\n                        {/* Or <a href=\"\">register now!</a> */}\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlogin = Form.create({})(login)\r\nexport default login;"]},"metadata":{},"sourceType":"module"}